load('ext://helm_resource', 'helm_resource')
load('ext://namespace', 'namespace_create')
load('../common/Tiltfile', 'copy_secret', 'helm_release')
update_settings(k8s_upsert_timeout_secs=120)

name_prefix = "galoy-dev"
ingress_namespace = "{}-ingress".format(name_prefix)
otel_namespace = "{}-otel".format(name_prefix)
kubemonkey_namespace = "{}-kubemonkey".format(name_prefix)

## cert-manager and ingress-nginx

namespace_create(ingress_namespace)

# TODO: decide how to label the ingress namespace
# k8s_resource(workload="cert-manager?", objects=["galoy-dev-ingress:namespace"])

#helm_release(
#  '../../charts/galoy-deps',
#  name='cert-manager',
#  namespace=ingress_namespace,
#  values=['./cert-manager-values.yml'],
#)

#helm_release(
#  '../../charts/galoy-deps',
#  name='ingress-nginx',
#  namespace=ingress_namespace,
#  values=['./ingress-nginx-values.yml'],
#)

## opentelemetry-collector

namespace_create(otel_namespace)

#helm_release(
#  '../../charts/galoy-deps',
#  name='opentelemetry-collector',
#  namespace=otel_namespace,
#  values=['./otel-values.yml'],
#)

# do we need kubemonkey in local dev?

# helm_resource(
#   name="kubemonkey",
#   chart="../../charts/galoy-deps",
#   namespace=kubemonkey_namespace,
#   flags=['--values=./kubemonkey-values.yml'],
#   labels="kubemonkey"
# )

